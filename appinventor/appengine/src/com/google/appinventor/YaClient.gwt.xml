<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Google Inc.//DTD Google Web Toolkit 2.3.0//EN" "http://google-web-toolkit.googlecode.com/svn/tags/2.3.0/distro-source/core/src/gwt-module.dtd">
<module rename-to='ode'>
  <entry-point class="com.google.appinventor.client.Ode" />

  <!-- speed up compilation for testing. comment out the next two lines to compile 
       all permutations -->
  <inherits name='com.google.gwt.user.UserAgent'/>
  <set-property name="user.agent" value="safari,gecko1_8" />

  <!-- inherits -->
  <inherits name="com.google.gwt.user.User" />
  <inherits name="com.google.gwt.json.JSON" />
  <inherits name="com.google.gwt.libideas.ImmutableResources" />
  <inherits name="com.google.gwt.resources.Resources" />
  <inherits name="com.google.gwt.widgetideas.WidgetIdeas" />
  <inherits name="com.google.gwt.widgetideas.GWTCanvas" />
  <inherits name="com.allen_sauer.gwt.dnd.gwt-dnd" />
  <inherits name="com.google.common.base.Base" />
  <inherits name="com.google.common.collect.Collect" />
  <inherits name="com.google.appinventor.components.CommonConstants" />
  <inherits name="com.google.appinventor.common.BlocksEditorHttpConstants" />
  <inherits name="com.google.appinventor.common.CommonUtils" />
  <inherits name="com.google.common.annotations.Annotations" />
  <inherits name="com.allen_sauer.gwt.dnd.gwt-dnd" />

  <!-- servlets -->
  <servlet path="/download" class="com.google.appinventor.server.DownloadServlet" />
  <servlet path="/getmotd" class="com.google.appinventor.server.GetMotdServiceImpl" />
  <servlet path="/help" class="com.google.appinventor.server.HelpServiceImpl" />
  <servlet path="/projects" class="com.google.appinventor.server.ProjectServiceImpl" />
  <servlet path="/upload" class="com.google.appinventor.server.UploadServlet" />
  <servlet path="/userinfo" class="com.google.appinventor.server.UserInfoServiceImpl" />
  <servlet path="/webstartfile" class="com.google.appinventor.server.WebStartFileServlet" />
  <servlet path="/webstartjnlp" class="com.google.appinventor.server.WebStartJnlpServlet" /> 
  
  <!-- srcs -->
  <source path="client"/>
  <source path="client/boxes"/>
  <source path="client/editor"/>
  <source path="client/explorer"/>
  <source path="client/jsonp"/>
  <source path="client/output"/>
  <source path="client/properties"/>
  <source path="client/settings"/>
  <source path="client/tracking"/>
  <source path="client/utils"/>
  <source path="client/widgets"/>
  <source path="client/wizards"/>
  <source path="client/youngandroid"/>
  <source path="client/editor/simple"/>
  <source path="client/editor/youngandroid"/>
  <source path="client/explorer/commands"/>
  <source path="client/explorer/project"/>
  <source path="client/explorer/youngandroid"/>
  <source path="client/properties/json"/>
  <source path="client/settings/project"/>
  <source path="client/settings/user"/>
  <source path="client/widgets/boxes"/>
  <source path="client/widgets/dnd"/>
  <source path="client/widgets/properties"/>
  <source path="client/wizards/youngandroid"/>
  <source path="client/editor/simple/components"/>
  <source path="client/editor/simple/palette"/>
  <source path="client/editor/youngandroid/palette"/>
  <source path="client/editor/youngandroid/properties"/>
  <source path="shared/jsonp"/>
  <source path="shared/rpc"/>
  <source path="shared/settings"/>
  <source path="shared/simple"/>
  <source path="shared/storage"/>
  <source path="shared/utils"/>
  <source path="shared/youngandroid"/>
  <source path="shared/properties/json"/>
  <source path="shared/rpc/help"/>
  <source path="shared/rpc/launch"/>
  <source path="shared/rpc/project"/>
  <source path="shared/rpc/user"/>
  <source path="shared/rpc/project/youngandroid"/>

  <!-- extra_module_contents -->

  <!-- ExtendedProxy -->
  <!--
    || GWT by default automatically generates code for remote services that provides the client with
    || an asynchronous proxy for server-side service implementations. The following configurations
    || registers an extended proxy generator that generates proxies with two additional features:
    ||
    ||   1) Attach RpCListeners to be notified of RPC events
    ||   2) Substitute the RPC to the server with a client-side synchronous implementation.
    ||
    || See package com.google.appinventor.client.ExtendedServiceProxy for details.
  -->
  <generate-with class="com.google.appinventor.rebind.ExtendedServiceProxyGenerator">
    <when-type-assignable class="com.google.gwt.user.client.rpc.RemoteService" />
  </generate-with>

  <!-- YaVersions -->
  <!-- TODO(opensource): Get rid of this Google-specific Versions code. Either
       replace with some other way to distinguish development vs. prod or just
       remove -->
  <!--
    || This module manages the different versions of ODE that can be built.
    ||
    || Currently we distinguish between developer and 'production' versions. The
    || developer version is defined as being served from a corp machine
    || (<hostname>.<office>.corp.google.com), all others are considered
    || production versions.
    ||
  -->

  <!-- Version Property (Developer vs Production) -->

  <define-property name="ode.version" values="developer,production" />

  <property-provider name="ode.version"><![CDATA[
    // TODO(opensource): For now, always in developer mode so that we see the 
    // developer messages. Eventually need a different way to distinguish developer 
    // from prod, if we want to make that distinction at all.
    //try {
      // Check the URL to determine the version
      // var re = new RegExp(".*\\.corp\\.google\\.com");
      //if (location.host.match(re)) {
        return "developer";
      //}
    //} catch(e) {
      //alert("Unexpected exception in version detection, using production: " + e);
    //}
    //return "production";
  ]]></property-provider>

  <generate-with class="com.google.appinventor.rebind.VersionGenerator">
    <when-type-assignable class="com.google.appinventor.client.Version" />
  </generate-with>

  <extend-property name="locale" values="de"/>
</module>
